version: '3.3'

services:
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - shardeum_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
    networks:
      - monitor-network
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VITE_PUBLIC_API_URL=${VITE_PUBLIC_API_URL}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - SHARDEUM_RPC_URL=${SHARDEUM_RPC_URL}
      - PRIMARY_SENDER_PRIVATE_KEY=${PRIMARY_SENDER_PRIVATE_KEY}
      - PRIMARY_RECEIVER_ADDRESS=${PRIMARY_RECEIVER_ADDRESS}
      - SECONDARY_SENDER_PRIVATE_KEY=${SECONDARY_SENDER_PRIVATE_KEY}
      - SECONDARY_RECEIVER_ADDRESS=${SECONDARY_RECEIVER_ADDRESS}
      - TRANSACTION_AMOUNT=${TRANSACTION_AMOUNT}
      - MONITOR_INTERVAL=${MONITOR_INTERVAL}
      - PORT=3000
      - VITE_PUBLIC_API_URL=${VITE_PUBLIC_API_URL}
    depends_on:
      - prometheus
    networks:
      - monitor-network
    restart: unless-stopped

networks:
  monitor-network:
    driver: bridge

volumes:
  shardeum_prometheus_data:
    driver: local